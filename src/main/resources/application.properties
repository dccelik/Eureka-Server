#Spring boot uygulama adini gösterir.
#Dagitik sistemlerde mikroservfislerin birbirini tanimasi ve haberlesmesi icin onemlidir.
#Eureka Serverdaki rolu:Bu projeyi calistirdigimda yonetim konsolunda gorunecek isimdir.
spring.application.name=eureka_server

#Port normalde localhost:8080 portunda calisir ancak biz bu proje icin 8761 portunu kullaniyoruz.
#http://localhost:8761 bu port uzerinden Eureka Server kullanici arayuzune ulasiriz
server.port=8761

#Bir uygulamanin Eureka Servera kendini kayit ettirip ettirmeyecegini gosterir
#Bir mikroservis uygulamasinda Eureka Client olarak calistirdigimizda kendisini Eureka Servera kaydettirir.
#Ancak false olarak ayarlandiginda  Eureka Server kendi kendine kayit ettirmesin. Yani bir Eureka Server'In kendisini veritabaninda(registery) kaydetmesini engeller
# cunku sadece diger mikroservislerin kayit etmesi gerekir.
eureka.client.register-with-eureka=false

#Eureka Client'in Eureka Server'dan servis kayitlarini(registery) alip almayacagini belirler.
#false olarak ayarlandiginda Eureka Server kendisinden kayitli servisleri almaz
#Yani Eureka Server kendi veritabaninda bunu guncellemez.
#Dikkat ! Eureka Serverda genelde false yapilmaz cunku kendisinin diger sunucularindan veri cekmesine gerek yoktur.
eureka.client.fetch-registry=false

#Eureka Server'in hata durumlarinda kendisini korumasina yardimci olacak guvenlik onlemidir.
#Bu mod etkinlestirildiginde Eureka Server gelen ve giden istekleri sinirlayarak veri kaybini onler.
#False yapildiginde,gelismis hata ayiklama ve test durumlari icin gerekli olacaktir.
eureka.server.enable-self-preservation=false